<!DOCTYPE html>
<html>
<head>
<title>Game</title>
<!--
<link href="lib/dojo/resources/dojo.css" rel="stylesheet">
<link href="lib/dijit/themes/tundra/tundra.css" rel="stylesheet">
<link href="lib/dojox/grid/resources/tundraGrid.css" rel="stylesheet">
-->
<link href="http://ajax.googleapis.com/ajax/libs/dojo/1.7.2/dojo/resources/dojo.css" rel="stylesheet">
<link href="http://ajax.googleapis.com/ajax/libs/dojo/1.7.2/dijit/themes/tundra/tundra.css" rel="stylesheet">
<link href="http://ajax.googleapis.com/ajax/libs/dojo/1.7.2/dojox/grid/resources/tundraGrid.css" rel="stylesheet">
<link href="themes/game.css" rel="stylesheet">
<!-- switch the commented lines below if using local dojo libraries -->
<!-- <script data-dojo-config="async:true" src="lib/dojo/dojo.js"></script> -->
<script src="http://ajax.googleapis.com/ajax/libs/dojo/1.7.2/dojo/dojo.js"></script>
<script>
var dc; // variable needed to setting timeout on card flip toggle
var front;
var back;
var timer;
var hoverok;
var cardWidth, cardHeight, sizePercent;
var headerHeight, playerHeight, footerHeight;
var cardMinHeight, cardMinWidth, footerMinHeight;
var maxX, maxY;
var initCardWidth, initCardHeight;
require([
  "dojo/dom-construct",
  "dojo/dom-class",
  "dojo/dnd/Moveable",
  "dojo/query"
  ], function(domConstruct,domClass){
  maxX = (window.innerWidth/2);
  maxY = (window.innerHeight/2);
  dc = domClass; // variable needed to setting timeout on card flip toggle
  setCardVars();
  setAreaVars();
  function createCard(id,image){
    /* TODO use data-dojo-props for variables that are HTML-invalid */
    var card = domConstruct.create("div",{
      id:id,
      //style:"height:"+cardHeight+"px;width:"+cardWidth+"px;min-height:"+cardMinHeight+"px;min-width:"+cardMinWidth+"px;",
      style:"height:"+cardHeight+"px;width:"+cardWidth+"px;",
      xPercent: null, /* how far current x is from the center */
      yPercent: null, /* how far current y is from the center */
      sizePercent: sizePercent, /* card scaling. based on Y since most screen sizes are limited more by the y-axis */
    });
    domClass.add(card,"card");
    var front = domConstruct.create("div",{
      style:"height:"+cardHeight+"px;width:"+cardWidth+"px;background-image:url('"+image+"');background-position:center center;background-repeat:no-repeat;background-size:100%;",
    });
    domClass.add(front,"front");
    domConstruct.place(front,card);
    var back = domConstruct.create("div",{
      style:"height:"+cardHeight+"px;width:"+cardWidth+"px;background-image:url('"+location.href+"images/back.jpg');background-position:center center;background-repeat:no-repeat;background-size:100%;",
    });
    domClass.add(back,"back behind");
    domConstruct.place(back,card);
    return card;
  }
  // for fun, create some cards
  for(var i=0;i<7;i++){
    var rnum = Math.floor((Math.random()*120)+1);
    if(rnum.toString().length == 1) rnum = "00"+rnum;
    if(rnum.toString().length == 2) rnum = "0"+rnum;
    var thisCard = createCard("g0001p0001c000"+(i+1),location.href+"images/A Clash of Arms/"+rnum+".jpg");
    domConstruct.place(thisCard,"gameArea");
    var xVar=(window.innerWidth/7*i+cardWidth/2)-window.innerWidth*.5;
    var yVar=(window.innerHeight-cardHeight-10)-window.innerHeight*.5;
    thisCard.style.left=xVar+"px";
    thisCard.style.top=yVar+"px";
    thisCard.xPercent=xVar/maxX;
    thisCard.yPercent=yVar/maxY;
  }
  for(var i=0;i<7;i++){
    var rnum = Math.floor((Math.random()*120)+1);
    if(rnum.toString().length == 1) rnum = "00"+rnum;
    if(rnum.toString().length == 2) rnum = "0"+rnum;
    var thisCard = createCard("g0001p0002c000"+(i+1),location.href+"images/A Clash of Arms/"+rnum+".jpg");
    domClass.add(thisCard,"opponent");
    domClass.add(thisCard.firstElementChild,"behind");
    domClass.remove(thisCard.lastElementChild,"behind");
    domConstruct.place(thisCard,"gameArea");
    var xVar=(window.innerWidth/7*i+cardWidth/2)-window.innerWidth*.5;
    var yVar = 1*dojo.byId("opponentArea").style.top.substring(0,dojo.byId("opponentArea").style.top.length-2)+10;
    thisCard.style.left=xVar+"px";
    thisCard.style.top=yVar+"px";
    thisCard.xPercent=xVar/maxX;
    thisCard.yPercent=yVar/maxY;
  }
  dojo.query(".card").forEach(function(node,index,arr){
    var mnode = dojo.dnd.Moveable(node);
    dojo.connect(node,"onmouseover",function(evt){ /* TODO */ });
    dojo.connect(node,"onmouseout",function(){ /* TODO */ });
    dojo.connect(node,"onclick",function(){ /* TODO onclick event only needs to make the card glow at this point */ });
    dojo.connect(node,"ondblclick",function(){
      flipCard(node);
    }); // end ondblclick
    dojo.connect(mnode, "onMoving", function(){ /* TODO */ }); // end onMoving
    dojo.connect(dojo.byId("gameArea"), "onmousemove", function(){ /* TODO */ }); // end onMoving
    dojo.connect(mnode, "onMoveStop", function(){
      console.log(xVar);
      //mnode.node.xPercent = ((mnode.node.style.left.substring(0,mnode.node.style.left.length-2) - mnode.node.style.width.substring(0,mnode.node.style.width.length-2))/2) /maxX;
      //mnode.node.yPercent = ((mnode.node.style.top.substring(0,mnode.node.style.top.length-2) - mnode.node.style.height.substring(0,mnode.node.style.height.length-2))/2) /maxY;
      mnode.node.xPercent = mnode.node.style.left.substring(0,mnode.node.style.left.length-2) /maxX;
      mnode.node.yPercent = mnode.node.style.top.substring(0,mnode.node.style.top.length-2) /maxY;
      //console.log("( "+mnode.node.style.left.substring(0,mnode.node.style.left.length-2)+" / "+maxX+" - "+mnode.node.style.width.substring(0,mnode.node.style.width.length-2)+" ) / 2");
      //console.log(mnode.node.xPercent);
    }); // end onMoveStop
  }); // end query for each card
  window.onresize = function(){
    maxX = window.innerWidth/2;
    maxY = window.innerHeight/2;
    setCardVars();
    setAreaVars();
    dojo.query(".card").forEach(function(node,index,arr){
      node.sizePercent = sizePercent;
      node.style.width = initCardWidth * node.sizePercent + "px";
      node.style.height = initCardHeight * node.sizePercent + "px";
      node.style.left = maxX * node.xPercent+"px";
      node.style.top = maxY * node.yPercent+"px";
    });
    dojo.query(".front,.back").forEach(function(node,index,arr){
      node.style.width = initCardWidth * node.parentNode.sizePercent + "px";
      node.style.height = initCardHeight * node.parentNode.sizePercent + "px";
    });
  }; // end onresize
});
</script>
<script>
function findWindowVars(){
  // called at initial load and every resize to find max X/Y values
  //cardMinHeight = "100";
  //cardMinWidth = "69";	
  //footerMinHeight = cardMinHeight * 1.5;
  maxX = (window.innerWidth/2);
  maxY = (window.innerHeight/2);
}
function setCardVars(){
  /* called at initial load and every resize */
  /* TODO set to size of current regular images (not plot cards) */
  /* TODO try css scaling instead of changeing card width/height */
  initCardWidth = 336;
  initCardHeight = 480;
  /* TODO find out make card size be a percentage of the actual image size */
  //cardHeight = window.innerHeight / 6.5;cardWidth = cardHeight / 1.439628483;
  cardHeight = (window.innerHeight/2) / 3.5;
  cardWidth = cardHeight / 1.449275362;
  sizePercent = cardHeight / initCardHeight;
}
function setAreaVars(){
  /* TODO look into combining with findWindowVars() */
  //footerHeight = window.innerHeight * .15;
  footerHeight = cardHeight * 1.5;
  headerHeight = window.innerHeight * .08;
  playerHeight = (window.innerHeight - headerHeight - footerHeight) / 2;
  //console.log(playerHeight);
  //console.log(maxY+" / "+maxX);
  document.getElementById("footer").style.height = footerHeight+"px";
  //document.getElementById("footer").style.minHeight = footerMinHeight+"px";
  document.getElementById("footer").style.left = "-"+maxX+"px";
  document.getElementById("footer").style.top = (maxY-document.getElementById("footer").clientHeight)+"px";
  document.getElementById("playerArea").style.height = playerHeight+"px";
  document.getElementById("playerArea").style.left = "-"+maxX+"px";
  document.getElementById("playerArea").style.top = "-"+(footerHeight+playerHeight-maxY)+"px";
  document.getElementById("opponentArea").style.height = playerHeight+"px";
  document.getElementById("opponentArea").style.left = "-"+maxX+"px";
  document.getElementById("opponentArea").style.top = "-"+(footerHeight+(playerHeight*2)-maxY)+"px";
  document.getElementById("header").style.height = headerHeight+"px";
  document.getElementById("header").style.left = "-"+maxX+"px";
  document.getElementById("header").style.top = "-"+maxY+"px";
}
function flipCard( node ){
  front = node.firstElementChild;
  back = node.lastElementChild;
  if( front.className.indexOf("behind") == -1 ) {
    dc.toggle(front,"toback");
    dc.toggle(back,"tofront");
  } else {
    dc.toggle(front,"tofront");
    dc.toggle(back,"toback");
  }
  window.setTimeout("dc.toggle(front,'behind');dc.toggle(back,'behind');dc.remove(front,'tofront toback');dc.remove(back,'tofront toback');", 1000);
}
</script>
</head>
<body class="tundra game">
<div id="gameArea" class="gameArea">
  <div id="header" class="header">header</div>
  <div id="opponentArea" class="playerArea opponent tmpOpponentArea">opponent</div>
  <div id="playerArea" class="playerArea">player</div>
  <div id="footer" class="footer">footer</div>
</div>
</body>
</html>